<mah:MetroWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    x:Class="EyeAuras.UI.MainWindow.Views.MainWindow"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:viewModels="clr-namespace:EyeAuras.UI.MainWindow.ViewModels"
    xmlns:eye="http://coderush.net/poeeye/"
    xmlns:tb="http://www.hardcodet.net/taskbar"
    xmlns:utilities="clr-namespace:EyeAuras.UI.Core.Utilities"
    xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:viewModels1="clr-namespace:EyeAuras.UI.Core.ViewModels"
    xmlns:blue="http://www.nuget.org/Blue.MVVM"
    xmlns:model="clr-namespace:EyeAuras.UI.MainWindow.Services"
    xmlns:treeView="clr-namespace:PoeShared.UI.TreeView;assembly=PoeShared.Wpf"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:behaviors="clr-namespace:EyeAuras.UI.MainWindow.Behaviors"
    mc:Ignorable="d"
    TextElement.Foreground="{StaticResource MaterialDesignBody}"
    TextBlock.Foreground="{StaticResource MaterialDesignBody}"
    TextElement.FontWeight="Regular"
    TextElement.FontFamily="{StaticResource FontPlayRegular}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    Width="{Binding Width, Mode=TwoWay}"
    Height="{Binding Height, Mode=TwoWay}"
    Left="{Binding Left, Mode=TwoWay}"
    Top="{Binding Top, Mode=TwoWay}"
    WindowState="{Binding WindowState, Mode=TwoWay}"
    MinWidth="{Binding MinSize.Width, Mode=OneWay}"
    MinHeight="{Binding MinSize.Height, Mode=OneWay}"
    Visibility="{Binding Visibility, Mode=TwoWay}"
    ShowInTaskbar="{Binding ShowInTaskbar, Mode=TwoWay}"
    Topmost="{Binding Topmost, Mode=TwoWay}"
    x:Name="MainWindowRoot"
    Background="{StaticResource MaterialDesignPaper}"
    Title="{Binding Title}"
    d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Converters.xaml" />
                <ResourceDictionary Source="MainWindow.tab.xaml" />
                <ResourceDictionary Source="PrismModuleStatusView.xaml" />

            </ResourceDictionary.MergedDictionaries>

            <blue:MultiplyDoubleConverter x:Key="MultiplyDoubleDivideByThreeConverter" Factor="0.33" />
            <blue:MultiplyDoubleConverter x:Key="MultiplyDoubleAuraListConverter" Factor="0.95" />

            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource SlimScrollBarStyleKey}" />

            <eye:BindingProxy x:Key="MainViewModelProxy" Data="{Binding}" />
        </ResourceDictionary>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Gesture="CTRL+T" Command="{Binding CreateNewTabCommand}" />
        <KeyBinding Gesture="CTRL+W" Command="{Binding CloseTabCommand}" CommandParameter="{Binding SelectedTab}" />
        <KeyBinding Gesture="CTRL+V" Command="{Binding PasteTabCommand}" />
        <KeyBinding Gesture="CTRL+D" Command="{Binding DuplicateTabCommand}" CommandParameter="{Binding SelectedTab}" />
        <KeyBinding Gesture="CTRL+C" Command="{Binding CopyTabToClipboardCommand}"
                    CommandParameter="{Binding SelectedTab}" />
        <KeyBinding Gesture="CTRL+Z" Command="{Binding UndoCloseTabCommand}" />
    </Window.InputBindings>

    <DockPanel>
        <tb:TaskbarIcon Visibility="Visible"
                        ToolTipText="{Binding Title}"
                        DoubleClickCommand="{Binding ShowAppCommand}"
                        IconSource="pack://application:,,,/Resources/mainIcon.ico">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Show main window" Command="{Binding ShowAppCommand}" />
                    <Separator />
                    <MenuItem Header="Exit app" Command="{Binding ExitAppCommand}" />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>

        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem DockPanel.Dock="Left">
                <ItemsControl ItemsSource="{Binding StatusBarItems}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <DockPanel LastChildFill="False" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="DockPanel.Dock" Value="Left" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ContentControl Content="{Binding}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StatusBarItem>

            <StatusBarItem DockPanel.Dock="Right">
                <ToggleButton Style="{StaticResource MaterialDesignToggleButton}"
                              Width="150"
                              Margin="2.5,0"
                              materialDesign:ButtonAssist.CornerRadius="2"
                              Background="Transparent"
                              IsChecked="{Binding GlobalHotkeyTrigger.IsActive}">
                    <ToggleButton.Content>
                        <Border Background="{StaticResource NegativeBrush}" BorderThickness="1"
                                BorderBrush="{StaticResource WarningBrush}" HorizontalAlignment="Stretch"
                                CornerRadius="6" ToolTip="Click to Enable all auras">
                            <DockPanel Margin="5,0,0,0">
                                <TextBlock Style="{StaticResource IconTextBlock}" Text="&#xf011;" />
                                <TextBlock Text="Auras are DISABLED" HorizontalAlignment="Center" />
                            </DockPanel>
                        </Border>
                    </ToggleButton.Content>
                    <materialDesign:ToggleButtonAssist.OnContent>
                        <Border Background="{StaticResource OverlayTitleBackgroundBrushKey}"
                                HorizontalAlignment="Stretch" CornerRadius="6" ToolTip="Click to Disable all auras">
                            <DockPanel Margin="5,0,0,0">
                                <TextBlock Text="Auras are running" HorizontalAlignment="Center" />
                            </DockPanel>
                        </Border>
                    </materialDesign:ToggleButtonAssist.OnContent>
                </ToggleButton>
            </StatusBarItem>

            <StatusBarItem DockPanel.Dock="Right"
                           Visibility="{Binding ModuleStatus.IsVisible, Converter={StaticResource TrueToVisibleFalseToCollapsedConverter}}">
                <ContentControl Content="{Binding ModuleStatus}" />
            </StatusBarItem>


            <StatusBarItem DockPanel.Dock="Right">
                <ContentControl Content="{Binding OpenAppDataDirectoryCommand}"
                                eye:CommandWrapperHelper.Icon="&#xF07C;"
                                ContentTemplate="{StaticResource CommandWrapperIcon}"
                                ToolTip="Open EyeAuras folder" />
            </StatusBarItem>

            <Border /> <!-- Reserved filler -->
        </StatusBar>

        <materialDesign:DrawerHost DockPanel.Dock="Top" x:Name="MainDrawerHost">

            <Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding ListWidth, Mode=TwoWay}"
                                          MinWidth="250"
                                          MaxWidth="{Binding ElementName=MainWindowRoot, Path=ActualWidth, Converter={StaticResource MultiplyDoubleDivideByThreeConverter}}" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <DockPanel Grid.Column="0" Grid.Row="0" x:Name="WindowContent">
                        <Border BorderBrush="{StaticResource SecondaryAccentBrush}" BorderThickness="0,0,1,0">
                            <DockPanel Margin="2.5">
                                <DockPanel.LayoutTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="-90" />
                                    </TransformGroup>
                                </DockPanel.LayoutTransform>

                                <!-- Items are upside-down -->
                                <ContentControl DockPanel.Dock="Left" x:Name="UndoCloseTabButton"
                                                eye:CommandWrapperHelper.Text="UNDO CLOSE"
                                                eye:CommandWrapperHelper.Icon="&#xF0E2;"
                                                ToolTip="CTRL+Z Undo close operation"
                                                Content="{Binding UndoCloseTabCommand}" />

                                <ContentControl DockPanel.Dock="Left" x:Name="CloneTabButton"
                                                eye:CommandWrapperHelper.Text="CLONE"
                                                eye:CommandWrapperHelper.Icon="&#xF24D;"
                                                eye:CommandWrapperHelper.CommandParameter="{Binding SelectedTab}"
                                                ToolTip="CTRL+D Duplicate selected tab"
                                                Content="{Binding DuplicateTabCommand}" />

                                <ContentControl DockPanel.Dock="Left" x:Name="PasteTabButton"
                                                eye:CommandWrapperHelper.Text="PASTE"
                                                eye:CommandWrapperHelper.Icon="&#xF0EA;"
                                                ToolTip="CTRL+V Paste tab"
                                                Content="{Binding PasteTabCommand}" />

                                <ContentControl DockPanel.Dock="Left" x:Name="CopyTabButton"
                                                eye:CommandWrapperHelper.Text="COPY"
                                                eye:CommandWrapperHelper.Icon="&#xF0C5;"
                                                eye:CommandWrapperHelper.CommandParameter="{Binding SelectedTab}"
                                                ToolTip="CTRL+C Copy selected tab to clipboard"
                                                Content="{Binding CopyTabToClipboardCommand}" />

                                <TextBlock DockPanel.Dock="Left"
                                           Text="AURA LIST"
                                           Margin="0,0,10,0"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Right" />
                            </DockPanel>
                        </Border>

                        <DockPanel>
                            <DockPanel DockPanel.Dock="Top">
                                <ContentControl DockPanel.Dock="Right" Content="{Binding SelectRegionCommand}"
                                                eye:CommandWrapperHelper.Icon="&#xf140;"
                                                ContentTemplate="{StaticResource CommandWrapperIcon}"
                                                ToolTip="Select Window" />
                                <ContentControl Content="{Binding CreateNewTabCommand}"
                                                eye:CommandWrapperHelper.Icon="&#xF055;"
                                                eye:CommandWrapperHelper.Text="New aura"
                                                ToolTip="CTRL+T Create new tab" />
                            </DockPanel>

                            <TextBlock DockPanel.Dock="Top" x:Name="NoTabsTip"
                                       FontSize="16" Text="Add your first Aura &#x2196;" VerticalAlignment="Top"
                                       IsEnabled="False"
                                       HorizontalAlignment="Center"
                                       Visibility="{Binding SelectedTab, Converter={StaticResource NotNullToCollapsedConverter}}" />

                            <DockPanel Background="Transparent">
                                <!--<DockPanel.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="New directory"
                                                  Command="{Binding CreateDirectoryCommand}">
                                            <MenuItem.Icon>
                                                <TextBlock Text="&#xf044;" Style="{StaticResource IconTextBlock}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="New aura"
                                                  Command="{Binding CreateNewTabCommand}">
                                            <MenuItem.Icon>
                                                <TextBlock Text="&#xf044;" Style="{StaticResource IconTextBlock}" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </DockPanel.ContextMenu>-->

                                <treeView:StretchingTreeView ItemsSource="{Binding TreeViewItems}" Margin="2.5"
                                                             DockPanel.Dock="Top" 
                                                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                             HorizontalContentAlignment="Stretch">
                                    <treeView:StretchingTreeView.Style>
                                        <Style TargetType="{x:Type TreeView}"
                                               BasedOn="{StaticResource MaterialDesignTreeView}">
                                            <Setter Property="Background" Value="{x:Null}" />
                                            <Setter Property="BorderBrush"
                                                    Value="{StaticResource SecondaryAccentForegroundBrush}" />
                                            <Setter Property="BorderThickness" Value="0" />
                                            <Setter Property="Foreground"
                                                    Value="{StaticResource PrimaryHueDarkForegroundBrush}" />
                                        </Style>
                                    </treeView:StretchingTreeView.Style>
                                    <TreeView.Resources>

                                        <HierarchicalDataTemplate DataType="{x:Type model:HolderTreeViewItemViewModel}"
                                                                  ItemsSource="{Binding Path=Children}">
                                            <DockPanel Background="Transparent">
                                                <DockPanel.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="Rename"
                                                                  InputGestureText="F2"
                                                                  Command="{Binding Value.RenameCommand}"
                                                                  IsEnabled="{Binding Value, Converter={StaticResource NullToFalseConverter}}">
                                                            <MenuItem.Icon>
                                                                <TextBlock Text="&#xf044;"
                                                                           Style="{StaticResource IconTextBlock}" />
                                                            </MenuItem.Icon>
                                                        </MenuItem>

                                                        <MenuItem Header="Copy"
                                                                  InputGestureText="CTRL+C"
                                                                  Command="{Binding Data.CopyToClipboardCommand, Source={StaticResource MainViewModelProxy}}"
                                                                  CommandParameter="{Binding Value}">
                                                            <MenuItem.Icon>
                                                                <TextBlock Text="&#xF0C5;"
                                                                           Style="{StaticResource IconTextBlock}" />
                                                            </MenuItem.Icon>
                                                        </MenuItem>
                                                        <MenuItem Header="Paste"
                                                                  InputGestureText="CTRL+V"
                                                                  Command="{Binding Data.PasteTabCommand, Source={StaticResource MainViewModelProxy}}">
                                                            <MenuItem.Icon>
                                                                <TextBlock Text="&#xF0EA;"
                                                                           Style="{StaticResource IconTextBlock}" />
                                                            </MenuItem.Icon>
                                                        </MenuItem>
                                                        <MenuItem Header="Clone"
                                                                  InputGestureText="CTRL+D"
                                                                  Command="{Binding Data.DuplicateTabCommand, Source={StaticResource MainViewModelProxy}}"
                                                                  CommandParameter="{Binding Value}">
                                                            <MenuItem.Icon>
                                                                <TextBlock Text="&#xF24D;"
                                                                           Style="{StaticResource IconTextBlock}" />
                                                            </MenuItem.Icon>
                                                        </MenuItem>
                                                        <Separator />
                                                        <MenuItem Header="Close"
                                                                  InputGestureText="CTRL+W"
                                                                  eye:CommandWrapperHelper.CommandParameter="{Binding Value}"
                                                                  Command="{Binding Data.CloseTabCommand, Source={StaticResource MainViewModelProxy}}">
                                                            <MenuItem.Icon>
                                                                <TextBlock Text="&#xf00d;"
                                                                           Style="{StaticResource IconTextBlock}" />
                                                            </MenuItem.Icon>
                                                        </MenuItem>
                                                    </ContextMenu>
                                                </DockPanel.ContextMenu>

                                                <ContentControl DockPanel.Dock="Right"
                                                                Content="{Binding Data.CloseTabCommand, Source={StaticResource MainViewModelProxy}}"
                                                                ToolTip="Remove aura" x:Name="RemoveAuraButton"
                                                                eye:CommandWrapperHelper.Icon="&#xf00d;"
                                                                Focusable="False" IsTabStop="False"
                                                                Width="24" Height="24" Margin="5,0"
                                                                Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=IsMouseOver, Converter={StaticResource TrueToVisibleFalseToHiddenConverter}}"
                                                                ContentTemplate="{StaticResource CommandWrapperIcon}"
                                                                eye:CommandWrapperHelper.CommandParameter="{Binding Value}" />
                                                <ContentControl
                                                    ContentTemplate="{StaticResource AuraViewModelHeaderTemplateKey}"
                                                    Content="{Binding Value}" HorizontalContentAlignment="Stretch" />
                                            </DockPanel>
                                        </HierarchicalDataTemplate>

                                        <HierarchicalDataTemplate
                                            DataType="{x:Type model:DirectoryTreeViewItemViewModel}"
                                            ItemsSource="{Binding Path=Children}">
                                            <TextBlock Text="{Binding Name}" />
                                        </HierarchicalDataTemplate>
                                    </TreeView.Resources>

                                    <TreeView.ItemContainerStyle>
                                        <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MaterialDesignTreeViewItem}">
                                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                            <Setter Property="Padding" Value="0 5 0 5" />
                                            <Setter Property="Margin" Value="-25 0 0 0" />
                                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="BorderBrush"
                                                            Value="{StaticResource SecondaryAccentBrush}" />
                                                    <Setter Property="Background"
                                                            Value="{StaticResource PrimaryHueDarkBrush}" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TreeView.ItemContainerStyle>

                                    <i:Interaction.Behaviors>
                                        <behaviors:EyeTreeViewDragAndDropBehavior ItemsSource="{Binding TabsList}" />
                                    </i:Interaction.Behaviors>

                                    <treeView:StretchingTreeView.InputBindings>
                                        <KeyBinding Key="F2" Command="{Binding SelectedTab.RenameCommand}" />
                                    </treeView:StretchingTreeView.InputBindings>
                                </treeView:StretchingTreeView>
                            </DockPanel>
                        </DockPanel>
                    </DockPanel>

                    <Image x:Name="AppBackgroundImage" Grid.Row="0" Grid.Column="2"
                           Source="pack://application:,,,/Resources/mainIcon.png"
                           Opacity="0.2" />

                    <TextBlock x:Name="TabIsNotSelectedTip" Grid.Row="0" Grid.Column="2" FontSize="16"
                               Text="Select or Add Aura" VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Visibility="{Binding SelectedTab, Converter={StaticResource NotNullToCollapsedConverter}}" />

                    <Border x:Name="SelectedTabContent" Grid.Row="0" Grid.Column="2" Margin="2.5"
                            Visibility="{Binding SelectedTab, Converter={StaticResource NullToCollapsedConverter}}">
                        <ScrollViewer DockPanel.Dock="Top" VerticalScrollBarVisibility="Auto" IsTabStop="False"
                                      Focusable="False">
                            <ItemsControl ItemsSource="{Binding TabsList}" Focusable="False">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Grid />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type viewModels1:IOverlayAuraTabViewModel}">
                                        <ContentControl Content="{Binding}">
                                            <ContentControl.Visibility>
                                                <MultiBinding Converter="{StaticResource EqualToVisibleConverter}">
                                                    <Binding />
                                                    <Binding Path="DataContext.SelectedTab"
                                                             ElementName="SelectedTabContent" />
                                                </MultiBinding>
                                            </ContentControl.Visibility>
                                        </ContentControl>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                    </Border>

                    <GridSplitter Grid.Column="1" Grid.Row="0"
                                  BorderBrush="{StaticResource SecondaryAccentBrush}" BorderThickness="1,0,1,0"
                                  Width="5" HorizontalAlignment="Stretch" />
                </Grid>

                <materialDesign:DrawerHost
                    IsBottomDrawerOpen="{Binding ApplicationUpdater.IsOpen}">
                    <materialDesign:DrawerHost.BottomDrawerContent>
                        <Grid Height="60">
                            <ContentPresenter Content="{Binding ApplicationUpdater}" />
                        </Grid>
                    </materialDesign:DrawerHost.BottomDrawerContent>
                </materialDesign:DrawerHost>

                <materialDesign:DialogHost
                    IsOpen="{Binding MessageBox.IsOpen}"
                    Style="{StaticResource MaterialMessageBoxStyleKey}"
                    materialDesign:TransitionAssist.DisableTransitions="True"
                    Visibility="{Binding MessageBox.IsOpen, Converter={StaticResource TrueToVisibleFalseToCollapsedConverter}}"
                    DialogContent="{Binding MessageBox}" />

                <materialDesign:DialogHost
                    x:Name="SettingsHost"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    IsOpen="{Binding Settings.IsOpen}"
                    Visibility="{Binding Settings.IsOpen, Converter={StaticResource TrueToVisibleFalseToCollapsedConverter}}"
                    materialDesign:TransitionAssist.DisableTransitions="True"
                    Style="{StaticResource MaterialDesignEmbeddedDialogHost}"
                    CloseOnClickAway="False">

                    <materialDesign:DialogHost.DialogContent>
                        <ContentPresenter
                            MinWidth="250"
                            MinHeight="150"
                            MaxWidth="{Binding ElementName=MainWindowRoot, Path=ActualWidth}"
                            MaxHeight="{Binding ElementName=MainWindowRoot, Path=ActualHeight}"
                            Margin="10"
                            Content="{Binding Settings}" />
                    </materialDesign:DialogHost.DialogContent>
                </materialDesign:DialogHost>
            </Grid>
        </materialDesign:DrawerHost>
    </DockPanel>


    <mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands ShowSeparators="True" />
    </mah:MetroWindow.LeftWindowCommands>

    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands ShowSeparators="True">
            <StackPanel Orientation="Horizontal"
                        ToolTip="Application is running without Administrator privileges, not all features may work correctly, e.g. global hotkeys"
                        Visibility="{Binding IsElevated, Converter={StaticResource TrueToCollapsedFalseToVisibleConverter}}">
                <materialDesign:PackIcon VerticalAlignment="Center" Kind="ShieldWarning" />
                <TextBlock Margin="2.5,0,0,0" Text="USER-MODE" />
            </StackPanel>

            <ContentControl Content="{Binding ApplicationUpdater.CheckForUpdatesCommand}"
                            ContentTemplate="{StaticResource CommandWrapperIcon}"
                            eye:CommandWrapperHelper.Progress="{Binding ApplicationUpdater.ProgressPercent}"
                            eye:CommandWrapperHelper.Icon="&#xF0ED;">
                <ContentControl.ToolTip>
                    <TextBlock
                        Text="{Binding ApplicationUpdater.UpdateSource.Description, StringFormat='Check for updates @ {0}'}" />
                </ContentControl.ToolTip>
            </ContentControl>
            <Button Content="&#xF085; Settings" FontFamily="{StaticResource FontAwesome}"
                    Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                    CommandTarget="{Binding ElementName=SettingsHost}" />
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>


</mah:MetroWindow>