<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:eyeAuras="clr-namespace:EyeAuras;assembly=EyeAuras"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:system="clr-namespace:System;assembly=System.Runtime"
                    xmlns:overlay="clr-namespace:EyeAuras.UI.Overlay"
                    xmlns:viewModels="clr-namespace:EyeAuras.UI.Overlay.ViewModels"
                    xmlns:lib="clr-namespace:EyeAuras.OnTopReplica;assembly=EyeAuras.OnTopReplica"
                    xmlns:eye="http://coderush.net/poeeye/">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/Styles.xaml" />
        <ResourceDictionary Source="pack://application:,,,/PoeShared.Wpf;component/Themes/SlimScrollbar.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.togglebutton.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <FontFamily x:Key="FontPlayRegular">pack://application:,,,/Resources/#Play</FontFamily>

    <Style x:Key="MaterialMessageBoxStyleKey" TargetType="{x:Type materialDesign:DialogHost}" BasedOn="{StaticResource MaterialDesignEmbeddedDialogHost}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="CloseOnClickAway" Value="True" />
    </Style>

    <DataTemplate x:Key="EyeOverlayViewModelRegionEditor" DataType="{x:Type viewModels:EyeOverlayViewModel}">
        <StackPanel DockPanel.Dock="Bottom">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="100" />
                </Grid.ColumnDefinitions>

                <xctk:DoubleUpDown Grid.Row="0" Grid.Column="0" Margin="0,0,0,0"
                                   materialDesign:HintAssist.Hint="Region X" materialDesign:HintAssist.IsFloating="True" Minimum="0"
                                   Style="{StaticResource MaterialNumericUpDownStyleKey}"
                                   DisplayDefaultValueOnEmptyText="True"
                                   DefaultValue="{x:Static system:Double.PositiveInfinity}"
                                   FormatString="0"
                                   Value="{Binding Region.RegionX, Mode=TwoWay, FallbackValue=0, UpdateSourceTrigger=PropertyChanged}" />

                <xctk:DoubleUpDown Grid.Row="1" Grid.Column="0" Margin="0,5,0,0"
                                   materialDesign:HintAssist.Hint="Region Y" materialDesign:HintAssist.IsFloating="True" Minimum="0"
                                   Style="{StaticResource MaterialNumericUpDownStyleKey}"
                                   DisplayDefaultValueOnEmptyText="True"
                                   DefaultValue="{x:Static system:Double.PositiveInfinity}"
                                   FormatString="0"
                                   Value="{Binding Region.RegionY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <xctk:DoubleUpDown Grid.Row="0" Grid.Column="1" Margin="5,0,0,0"
                                   materialDesign:HintAssist.Hint="Region Width" materialDesign:HintAssist.IsFloating="True" Minimum="0"
                                   Style="{StaticResource MaterialNumericUpDownStyleKey}"
                                   DisplayDefaultValueOnEmptyText="True"
                                   DefaultValue="{x:Static system:Double.NegativeInfinity}"
                                   FormatString="0"
                                   Value="{Binding Region.RegionWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />


                <xctk:DoubleUpDown Grid.Row="1" Grid.Column="1" Margin="5,5,0,0"
                                   materialDesign:HintAssist.Hint="Region Height" materialDesign:HintAssist.IsFloating="True" Minimum="0"
                                   Style="{StaticResource MaterialNumericUpDownStyleKey}"
                                   DisplayDefaultValueOnEmptyText="True"
                                   DefaultValue="{x:Static system:Double.NegativeInfinity}"
                                   FormatString="0"
                                   Value="{Binding Region.RegionHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>

            <Grid Margin="0,5,0,0">
                <ContentPresenter Grid.Column="0" Content="{Binding ResetRegionCommand}"
                                  eye:CommandWrapperHelper.Text="Reset region" />
            </Grid>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="EyeOverlayViewModelPositionEditor" DataType="{x:Type viewModels:EyeOverlayViewModel}">
        <StackPanel DockPanel.Dock="Bottom">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="100" />
                </Grid.ColumnDefinitions>

                <xctk:IntegerUpDown Grid.Row="0" Grid.Column="0" Margin="0,0,0,0"
                                    materialDesign:HintAssist.Hint="Overlay X" materialDesign:HintAssist.IsFloating="True" Minimum="0"
                                    DisplayDefaultValueOnEmptyText="True"
                                    DefaultValue="0"
                                    Style="{StaticResource MaterialNumericUpDownStyleKey}"
                                    Value="{Binding Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <xctk:IntegerUpDown Grid.Row="1" Grid.Column="0" Margin="0,5,0,0"
                                    materialDesign:HintAssist.Hint="Overlay Y" materialDesign:HintAssist.IsFloating="True" Minimum="0"
                                    DisplayDefaultValueOnEmptyText="True"
                                    DefaultValue="0"
                                    Style="{StaticResource MaterialNumericUpDownStyleKey}"
                                    Value="{Binding Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <xctk:IntegerUpDown Grid.Row="0" Grid.Column="1" Margin="5,0,0,0"
                                    materialDesign:HintAssist.Hint="Overlay Width" materialDesign:HintAssist.IsFloating="True" Minimum="0"
                                    DisplayDefaultValueOnEmptyText="True"
                                    DefaultValue="0"
                                    Style="{StaticResource MaterialNumericUpDownStyleKey}"
                                    Value="{Binding Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <xctk:IntegerUpDown Grid.Row="1" Grid.Column="1" Margin="5,5,0,0"
                                    materialDesign:HintAssist.Hint="Overlay Height" materialDesign:HintAssist.IsFloating="True" Minimum="0"
                                    DisplayDefaultValueOnEmptyText="True"
                                    DefaultValue="0"
                                    Style="{StaticResource MaterialNumericUpDownStyleKey}"
                                    Value="{Binding Height, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>

        </StackPanel>

    </DataTemplate>

    <Style TargetType="{x:Type materialDesign:Flipper}"
           BasedOn="{StaticResource {x:Type materialDesign:Flipper}}"
           x:Key="SimpleFlipper">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type materialDesign:Flipper}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            x:Name="Border">
                        <Grid>
                            <ContentPresenter x:Name="FrontContentPresenter"
                                              Visibility="{Binding IsFlipped, Converter={StaticResource TrueToCollapsedFalseToVisibleConverter}}"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding FrontContent}"
                                              ContentTemplate="{TemplateBinding FrontContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding FrontContentTemplateSelector}"
                                              ContentStringFormat="{TemplateBinding FrontContentStringFormat}"
                                              RenderTransformOrigin=".5,.5" />
                            <ContentPresenter x:Name="BackContentPresenter"
                                              Visibility="{Binding IsFlipped, Converter={StaticResource TrueToVisibleFalseToCollapsedConverter}}"
                                              Margin="{TemplateBinding Padding}"
                                              Content="{TemplateBinding BackContent}"
                                              ContentTemplate="{TemplateBinding BackContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding BackContentTemplateSelector}"
                                              ContentStringFormat="{TemplateBinding BackContentStringFormat}"
                                              RenderTransformOrigin=".5,.5" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type lib:WindowHandle}">
        <DockPanel Height="20" Background="Transparent" ToolTipService.ShowDuration="30000">
            <DockPanel.ToolTip>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Column="0" Grid.Row="0" Text="Class:" HorizontalAlignment="Right" />
                    <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding Class}" Margin="10,0" />
                                    
                    <TextBlock Grid.Column="0" Grid.Row="1" Text="Process:" HorizontalAlignment="Right" />
                    <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding ProcessId}" Margin="10,0" />
                                    
                    <TextBlock Grid.Column="0" Grid.Row="2" Text="Client bounds:" HorizontalAlignment="Right" />
                    <TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding ClientBounds}" Margin="10,0" />
                                    
                    <TextBlock Grid.Column="0" Grid.Row="3" Text="Window bounds:" HorizontalAlignment="Right" />
                    <TextBlock Grid.Column="1" Grid.Row="3" Text="{Binding WindowBounds}" Margin="10,0" />
                </Grid>
            </DockPanel.ToolTip>
            <Image Source="{Binding IconBitmap}" Margin="5,0" Width="14" Height="14" />
            <TextBlock Text="{Binding Title}"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       TextAlignment="Left"
                       TextTrimming="CharacterEllipsis" />
            <TextBlock Text="{Binding Handle, Converter={StaticResource IntPtrToHexadecimalConverter}}"
                       Opacity="0.7"
                       Margin="10,0,0,0"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       TextAlignment="Right" />
        </DockPanel>
    </DataTemplate>
    
    
    <Style x:Key="ToggleListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="14 6 14 6" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="{TemplateBinding Margin}"
                            ClipToBounds="{TemplateBinding ClipToBounds}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                        <VisualTransition.GeneratedEasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </VisualTransition.GeneratedEasingFunction>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal"/>
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="Opacity"
                                                         To="0.1" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="*" To="Selected">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackgroundBorder">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="*" To="SelectedUnfocused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackgroundBorder">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Selected" To="Unselected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="SelectedBackgroundBorder"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0" Duration="0"/>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackgroundBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unselected"/>
                                <VisualState Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackgroundBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Border x:Name="MouseOverBorder"
                                    Opacity="0"
                                    Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"/>
                            <Border x:Name="SelectedBackgroundBorder"
                                    Opacity="0"
                                    Background="{DynamicResource MaterialDesignDivider}" />
                            <materialDesign:Ripple x:Name="Ripple" Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                        Opacity=".56"
                                        Focusable="False"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Padding="{TemplateBinding Padding}">
                            </materialDesign:Ripple>
                            <Border x:Name="SelectedBorder"
                                    Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}, Path=SelectionMode, Converter={StaticResource EqualityToVisibilityConverter}, ConverterParameter={x:Static SelectionMode.Extended}, Mode=OneWay}"
                                    Opacity="0"
                                    BorderThickness="0"
                                    BorderBrush="{DynamicResource MaterialDesignDivider}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Ripple" Property="Opacity" Value=".92" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".56" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>